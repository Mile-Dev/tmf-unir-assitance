name: Deploy Infra to AWS

on:
  push:
    branches:
      - main 
jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      PROJECT: asistencia-viajero
      STAGE: dev
      AWS_REGION: us-west-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: |
          cd @infra
          npm ci
          npm install -g aws-cdk
          cdk --version
          cd ..

      - name: Detect changed files
        id: changes
        run: |
          echo "CHANGED_FILES=$(git diff --name-only HEAD HEAD~1)" >> $GITHUB_ENV

      - name: Deploy CDK Stacks
        run: |
          CHANGED_FILES="$CHANGED_FILES"
          echo "Archivos modificados:"
          echo "$CHANGED_FILES"

          # Declaración de stacks y sus patrones relevantes
          declare -A STACKS
          STACKS["NetworkingStack"]="@infra/lib/stack/networking/"
          STACKS["DatabaseStack"]="@infra/lib/stack/database/"
          STACKS["CognitoStack"]="@infra/lib/stack/cognito/"
          STACKS["WafStack"]="@infra/lib/stack/waf/"
          STACKS["S3Stack"]="@infra/lib/stack/s3/ @infra/files/Origen_Datos_ICD10.csv"
          STACKS["DynamoStack"]="@infra/lib/stack/dynamo/"
          STACKS["LambdaLayersStack"]="@infra/lib/stack/layers/ @infra/src/layers/"
          STACKS["StatemachineStack"]="@infra/lib/stack/statemachines/"
          STACKS["MainStack"]="@infra/lib/stack/endpoints/ @infra/src/lambdas/authorizer/ @infra/lib/main-stack.ts"

          for STACK_KEY in "${!STACKS[@]}"; do
            STACK_NAME="${PROJECT}-${STACK_KEY}"
            PATTERNS="${STACKS[$STACK_KEY]}"

            SHOULD_DEPLOY=false

            if ! aws cloudformation describe-stacks --stack-name "$STACK_NAME" > /dev/null 2>&1; then
              echo "Stack $STACK_NAME no existe. Marcando para despliegue."
              SHOULD_DEPLOY=true
            else
              # Verificar cambios en los patrones
              for pattern in $PATTERNS; do
                if echo "$CHANGED_FILES" | grep -q "$pattern"; then
                  echo "Cambios detectados para $STACK_NAME (patrón: $pattern)"
                  SHOULD_DEPLOY=true
                  break
                fi
              done
            fi

            if [ "$SHOULD_DEPLOY" = true ]; then
              echo "--- DESPLEGANDO ${STACK_NAME} ---"
              cd @infra
              npx cdk deploy -e "$STACK_NAME" --require-approval never
              if [ $? -ne 0 ]; then
                echo "ERROR: Falló el despliegue de ${STACK_NAME}"
                exit 1
              fi
              cd ..
            else
              echo "Sin cambios relevantes para $STACK_NAME. Omitiendo despliegue."
            fi
          done

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            @infra/node_modules
            @infra/cdk.staging
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
